services:
  DotNetCore.EnterpriseTemplate.webapi:
    container_name: ambev_developer_evaluation_webapi
    image: ${DOCKER_REGISTRY-}ambevdeveloperevaluationwebapi
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - dpkeys:/root/.aspnet/DataProtection-Keys
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Server=DotNetCore.EnterpriseTemplate.database;Port=5432;Database=developer_evaluation;User Id=developer;Password=ev@luAt10n
      - Kafka__BootstrapServers=DotNetCore.EnterpriseTemplate.kafka:9092
    depends_on:
      DotNetCore.EnterpriseTemplate.database:
        condition: service_healthy
      DotNetCore.EnterpriseTemplate.kafka:
        condition: service_healthy

  DotNetCore.EnterpriseTemplate.database:
    container_name: ambev_developer_evaluation_database
    image: postgres:latest
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d developer_evaluation"]
      interval: 5s
      timeout: 5s
      retries: 5

  DotNetCore.EnterpriseTemplate.kafka:
    container_name: ambev_developer_evaluation_kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@DotNetCore.EnterpriseTemplate.kafka:9093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://DotNetCore.EnterpriseTemplate.kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CLUSTER_ID: 'KafkaCluster1'
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server DotNetCore.EnterpriseTemplate.kafka:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
volumes:
  dpkeys:
  pgdata: